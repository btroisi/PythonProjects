#Brandon Troisi
#3/30/16
#version1

import sys

def init ():
    '''return an empty L-system'''
    return ['',[]]

def setBase (lsys, base):
    '''set the value of the base of an L-system'''
    lsys[0] = base
    
def addRule (lsys, newrule):
    '''add rule to lsystem new rule is a list of 2 strings'''
    lsys[1].append(newrule)

def getBase(lsys):
    '''Return base string l-system'''
    return lsys[0]

def getRule(lsys, ruleIdx):
    '''Return the ruleIdx'th rule of this lsystem   '''
    return lsys[1][ruleIdx]
    

def createLsystemFromFile( filename ):
      """ Create an L-system list by reading in the specified file """
      fp=open(filename,'r')
      lines = fp.readlines()
      fp.close()
      lsys = init()
      for i in lines:
          words = i.split()
          if words[0] == 'base':
              setBase(lsys,words[1])
          elif words[0] == 'rule':
              addRule(lsys, words[1:])
      return lsys

def buildString( lsys, iter ):
	'''
	Returns a string generated by applying the L-system rules for iter iterations
	'''
	newstring=getBase(lsys)
	rule=getRule(lsys,0)
	symbol=rule[0]
	replacement=rule[1]
	for i in range(iter):
		newstring=newstring.replace( symbol, replacement )
	return newstring

def main(argv):
	
    my_lsys = init()
    setBase( my_lsys, 'A' )
    addRule( my_lsys, ['A','AB'] )
    print my_lsys
    print "the base is ", getBase( my_lsys )
    print "the first rule is ", getRule( my_lsys, 0 )
    '''
    This sets the base equal to A and the rule equal to AB
    '''
    if len(argv) < 3:
      print "Usage : python lsystem.py <in_filename> <num_iterations>"
      exit()

    lsys_filename = argv[1]
    lsys = createLsystemFromFile( lsys_filename )
    print lsys
    '''
    The first input in the terminal after python lsystem.py is the file from which
    to create the lsystem with a specific base and rule
    '''
										 
    num_iter = int( argv[2] )
    s = buildString( lsys, num_iter )
    print s 
    '''
    The second input in the terminal after python lsystem.py is how many times to replace
    base with rule in L-system
    '''
				
if __name__ == '__main__':
    main(sys.argv)